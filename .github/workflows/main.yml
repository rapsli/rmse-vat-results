name: Build & Release plugin zip

on:
  push:
    tags:
      - 'v*'         # läuft bei Tags wie v0.1.0
  workflow_dispatch: {}  # optional: manuell starten

permissions:
  contents: write       # nötig, um Releases anzulegen

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build

      - name: Create plugin zip
        run: npm run plugin-zip   # erzeugt z. B. rmse-vat-results.zip

      - name: Make dist folder
        run: |
          rm -rf dist && mkdir -p dist/rmse-vat-results
          rsync -a \
            --exclude ".git" --exclude ".github" \
            --exclude "node_modules" --exclude "src" \
            --exclude ".wp-env.json" --exclude ".editorconfig" \
            --exclude ".gitignore" --exclude ".distignore" \
            --exclude "package*.json" --exclude "*.map" \
            ./ dist/rmse-vat-results/
          (cd dist && zip -r ../rmse-vat-results.zip rmse-vat-results)


      # optional: zusätzlich als Action-Artefakt ablegen
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rmse-vat-results
          path: rmse-vat-results.zip
          if-no-files-found: error
          retention-days: 5

      # Release anlegen + ZIP anhängen
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: rmse-vat-results.zip
          generate_release_notes: true
